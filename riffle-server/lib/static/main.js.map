{"version":3,"sources":["../riffle-server/src/RiffleSchema.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/colyseus.service.ts","./src/app/lobby/lobby.component.ts","./src/app/lobby/lobby.component.html","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Schema, ArraySchema, MapSchema, type } from \"@colyseus/schema\";\r\n\r\nexport enum GameView {\r\n  GameLobby,\r\n  Swapping,\r\n  Showdown\r\n}\r\n\r\nexport const GameConstants = {\r\n  roundTimeMS: 30 * 1000,\r\n};\r\n\r\nexport class Card extends Schema {\r\n  @type(\"uint8\") num: number = 0;\r\n  @type(\"uint8\") suit: number = 0;\r\n\r\n  constructor(num: number, suit: number) {\r\n    super();\r\n    this.num = num;\r\n    this.suit = suit;\r\n  }\r\n\r\n  // converts to format compatible with pokersolver library\r\n  // E.g. [num=1, suit=0] -> Ace of Spades -> 'As'\r\n  public asPokersolverString(): string {\r\n    const suit = {\r\n      0: 'c',\r\n      1: 'd',\r\n      2: 'h',\r\n      3: 's'\r\n    }[this.suit];\r\n\r\n    let num: string;\r\n    switch (this.num) {\r\n      case 1:\r\n        num = 'A';\r\n        break;\r\n      case 10:\r\n        num = 'T';\r\n        break;\r\n      case 11:\r\n        num = 'J';\r\n        break;\r\n      case 12:\r\n        num = 'Q';\r\n        break;\r\n      case 13:\r\n        num = 'K';\r\n        break;\r\n      default:\r\n        num = this.num.toString();\r\n    }\r\n\r\n    return num + suit;\r\n  }\r\n}\r\n\r\nexport class Player extends Schema {\r\n  @type('string')\r\n  id: string;\r\n\r\n  @type('string')\r\n  name: string;\r\n\r\n  @type([ Card ])\r\n  cards = new ArraySchema<Card>();\r\n\r\n  @type('uint16')\r\n  score = 0;\r\n\r\n  @type('boolean')\r\n  votedNextRound: boolean = false;\r\n\r\n  constructor(id: string, name: string) {\r\n    super();\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class ShowdownResult extends Schema{\r\n  @type('string')\r\n  playerId: string;\r\n\r\n  @type('string')\r\n  playerName: string;\r\n\r\n  @type('string')\r\n  hand: string;\r\n\r\n  @type('uint8')\r\n  rank: number\r\n\r\n  constructor(playerId: string, playerName: string, hand: string, rank: number) {\r\n    super();\r\n    this.playerId = playerId;\r\n    this.playerName = playerName;\r\n    this.hand = hand;\r\n    this.rank = rank;\r\n  }\r\n}\r\n\r\nexport class RiffleState extends Schema {\r\n  @type('uint8')\r\n  gameView: GameView;\r\n\r\n  @type({ map: Player })\r\n  players = new MapSchema<Player>();\r\n\r\n  @type([ Card ])\r\n  commonCards = new ArraySchema<Card>();\r\n\r\n  @type([ Card ])\r\n  deck: ArraySchema<Card>;\r\n\r\n  @type([ ShowdownResult ])\r\n  showdownResults: ShowdownResult[];\r\n\r\n  @type(Player)\r\n  showdownWinner: Player;\r\n\r\n  @type('uint8')\r\n  numVotedNextRound: number;\r\n\r\n  @type('uint8')\r\n  nextRoundVotesRequired: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'resource-game-client';\r\n}\r\n","\r\n<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { LobbyComponent } from './lobby/lobby.component';\r\nimport { GameComponent } from './game/game.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LobbyComponent,\r\n    GameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Client as ColyseusClient, Room, RoomAvailable } from 'colyseus.js';\r\nimport { from, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ColyseusService {\r\n  public allRooms: RoomAvailable[];\r\n  private client: ColyseusClient;\r\n  public room: Room;\r\n  public room$: Observable<Room>;\r\n\r\n  constructor() {\r\n    this.initClient();\r\n  }\r\n\r\n  private initClient(): void {\r\n    const host = window.document.location.host.replace(/:.*/, '');\r\n    const serverUrl = location.protocol.replace(\"http\", \"ws\") + \"//\" + host + (location.port ? ':'+ location.port : '');\r\n\r\n    this.client = new ColyseusClient(serverUrl);\r\n    this.client.joinOrCreate('lobby').then(lobby => {\r\n      lobby.onMessage(\"rooms\", (rooms) => {\r\n        this.allRooms = rooms;\r\n      });\r\n      \r\n      lobby.onMessage(\"+\", ([roomId, room]) => {\r\n        const roomIndex = this.allRooms.findIndex((room) => room.roomId === roomId);\r\n        if (roomIndex !== -1) {\r\n          this.allRooms[roomIndex] = room;\r\n        } else {\r\n          this.allRooms.push(room);\r\n        }\r\n      });\r\n      \r\n      lobby.onMessage(\"-\", (roomId) => {\r\n        this.allRooms = this.allRooms.filter((room) => room.roomId !== roomId);\r\n      });\r\n    });\r\n  }\r\n\r\n  public createRoom(options: any): Observable<Room> {\r\n    this.room$ = from(\r\n      this.client.create('riffle_room', {\r\n        password: 'test',\r\n        ...options\r\n      })\r\n    ).pipe(\r\n        tap(room => {\r\n          this.room = room;\r\n\r\n          room.onMessage('debug', (obj) => {\r\n            console.log('DEBUG:', obj);\r\n          });\r\n        }),\r\n      );\r\n\r\n    return this.room$;\r\n  }\r\n\r\n  public joinGame(roomId: string, options: any): Observable<Room> {\r\n    this.room$ = from(\r\n      this.client.joinById(roomId, { ...options })\r\n    ).pipe(\r\n        tap(room => {\r\n          this.room = room;\r\n\r\n          room.onMessage('debug', (obj) => {\r\n            console.log('DEBUG:', obj);\r\n          });\r\n        }),\r\n      );\r\n\r\n    return this.room$;\r\n  }\r\n\r\n  public swapCards(commonIndex: number, handIndex: number): void {\r\n    this.room.send('swap-cards', {\r\n      handIndex,\r\n      commonIndex\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { ColyseusService } from '../colyseus.service';\r\n\r\nimport {NgbModal, ModalDismissReasons, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-lobby',\r\n  templateUrl: './lobby.component.html',\r\n  styleUrls: ['./lobby.component.css']\r\n})\r\nexport class LobbyComponent implements OnInit {\r\n  public createForm: FormGroup;\r\n  public joinForm: FormGroup;\r\n  public lobbyForm: FormGroup;\r\n  private modalRef: NgbModalRef;\r\n  public wrongPassword: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public colyseus: ColyseusService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm = this.fb.group({\r\n      roomName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\r\n      password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(16)]]\r\n    });\r\n\r\n    this.joinForm = this.fb.group({\r\n      roomId: ['', [Validators.required]],\r\n      password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(16)]]\r\n    });\r\n\r\n    this.lobbyForm = this.fb.group({\r\n      username:  ['', [Validators.required, Validators.minLength(2), Validators.maxLength(16)]],\r\n      createForm: this.createForm,\r\n      joinForm: this.joinForm,\r\n    })\r\n\r\n    // TODO remove this, temporary while debugging\r\n    this.lobbyForm.setValue({\r\n      username: 'Ronan',\r\n      createForm: {\r\n        roomName: 'Test room',\r\n        password: 'qwerty123'\r\n      },\r\n      joinForm: {\r\n        roomId: 'ABCDEF',\r\n        password: 'qwerty123'\r\n      }\r\n    });\r\n  }\r\n\r\n  public createRoom(): void {\r\n    this.colyseus.createRoom({\r\n      username: this.lobbyForm.get('username').value,\r\n      roomName: this.lobbyForm.get(['createForm', 'roomName']).value,\r\n      password: this.lobbyForm.get(['createForm', 'password']).value\r\n    }).pipe(take(1)).subscribe(room => {\r\n      this.router.navigate(['game', room.id]);\r\n    });\r\n  }\r\n\r\n  public openPasswordModal(content: TemplateRef<any>, roomId: string): void {\r\n    this.joinForm.controls['roomId'].setValue(roomId);\r\n\r\n    if (this.lobbyForm.get('username').valid) {\r\n      this.modalRef = this.modalService.open(content);\r\n\r\n      this.modalRef.dismissed.pipe(take(1)).subscribe(() => {\r\n        this.wrongPassword = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  public tryJoinRoom(): void {\r\n    const username = this.lobbyForm.get('username').value;\r\n    const roomId = this.joinForm.get('roomId').value;\r\n    const password = this.joinForm.get('password').value;\r\n\r\n    this.colyseus.joinGame(roomId, {\r\n      username,\r\n      password,\r\n    }).pipe(take(1)).subscribe(room => {\r\n      room.onMessage('password-accepted', () => {\r\n        this.modalRef.close();\r\n        this.router.navigate(['game', room.id]);\r\n      });\r\n\r\n      room.onMessage('password-rejected', () => {\r\n        this.wrongPassword = true;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"lobbyForm\">\r\n  <div class=\"container mt-3\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"input-group input-group-lg\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\"\r\n            >Username</span\r\n          >\r\n        </div>\r\n        <input\r\n          formControlName=\"username\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          aria-label=\"Large\"\r\n          placeholder=\"Username\"\r\n          required\r\n        />\r\n      </div>\r\n    </div>\r\n  \r\n    <div class=\"row justify-content-center\">\r\n      <h3>Create a Game</h3>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <em>All fields are required</em>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <form [formGroup]=\"createForm\">\r\n        <div class=\"input-group input-group-lg mt-3\">\r\n          <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\"\r\n              >Room Info</span\r\n            >\r\n          </div>\r\n          <input\r\n            formControlName=\"roomName\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            aria-label=\"Large\"\r\n            placeholder=\"Name\"\r\n            required\r\n          />\r\n          <input\r\n            formControlName=\"password\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            aria-label=\"Large\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div class=\"input-group-append\">\r\n            <button\r\n              class=\"btn btn-primary\"\r\n              type=\"submit\"\r\n              [disabled]=\"createForm.invalid\"\r\n              (click)=\"createRoom()\"\r\n              autofocus\r\n            >\r\n              Create Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <hr />\r\n    <div class=\"row justify-content-center\">\r\n      <h3>Join a Game</h3>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <ng-template #noRooms>\r\n        <p><em>No games currently in progress</em></p>\r\n      </ng-template>\r\n        <div *ngIf=\"colyseus.allRooms?.length; else noRooms\">\r\n          <div class=\"row justify-content-center\"><p><em>Click a row to join a game</em></p></div>\r\n          <table class=\"table table-striped table-bordered table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Room Name</th>\r\n                <th scope=\"col\">Room ID</th>\r\n                <th scope=\"col\">Players</th>\r\n                <th scope=\"col\">Max Players</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let room of colyseus.allRooms\" (click)=\"openPasswordModal(passwordModal, room.roomId)\">\r\n                <th scope=\"row\">{{ room.metadata.roomName }}</th>\r\n                <td>{{ room.roomId }}</td>\r\n                <td>{{ room.clients }}</td>\r\n                <td>{{ room.maxClients }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Join Game Password Modal -->\r\n  <form [formGroup]=\"joinForm\">\r\n    <ng-template #passwordModal let-modal>\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Enter room password</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div *ngIf=\"wrongPassword\" class=\"alert alert-danger\" role=\"alert\">\r\n          Incorrect password, please try again.\r\n        </div>\r\n        <div class=\"input-group input-group-lg\">\r\n          <input\r\n            formControlName=\"password\"\r\n            (keydown.enter)=\"tryJoinRoom()\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            aria-label=\"Large\"\r\n            placeholder=\"Password\"\r\n            autofocus\r\n            required\r\n          />\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            (click)=\"tryJoinRoom()\"\r\n          >\r\n            Join\r\n          </button>\r\n          <button\r\n            class=\"btn btn-outline-secondary\"\r\n            aria-label=\"Close\"\r\n            (click)=\"modal.dismiss()\"\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </form>\r\n</form>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { Card, GameConstants, RiffleState, GameView, ShowdownResult, Player } from '../../../../riffle-server/src/RiffleSchema';\r\nimport { ColyseusService } from '../colyseus.service';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  public gameId: Observable<string>;\r\n  public commonCards: Card[];\r\n  public handCards: Card[];\r\n  public selectedCommonIndex;\r\n  public selectedHandIndex;\r\n  public GameView = GameView;\r\n  public gameView: GameView;\r\n\r\n  public GameConstants = GameConstants;\r\n  public roundTimeRemainingMS: number;\r\n  private roundTimeInterval: any;\r\n  private roundTimeDeltaMS = 15;\r\n\r\n  public showdownResults: ShowdownResult[];\r\n  public showdownWinner: Player;\r\n  public isNextRoundClicked: boolean;\r\n  public numVotedNextRound: number;\r\n  public nextRoundVotesRequired: number;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private colyseus: ColyseusService,\r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n    if (this.colyseus.room === undefined) {\r\n      // no handle on this game; redirect to the lobby\r\n      this.router.navigate(['lobby']);\r\n    }\r\n\r\n    this.gameId = this.route.params.pipe(\r\n      map((params => params['id'])),\r\n    );\r\n\r\n    this.colyseus.room$.pipe(take(1)).subscribe(room => {\r\n      room.onStateChange((state: RiffleState) => {\r\n        this.gameView = state.gameView;\r\n        this.commonCards = state.commonCards;\r\n        this.handCards = state.players.get(room.sessionId).cards;\r\n\r\n        this.showdownResults = state.showdownResults;\r\n        this.showdownWinner = state.showdownWinner;\r\n        this.numVotedNextRound = state.numVotedNextRound;\r\n        this.nextRoundVotesRequired = state.nextRoundVotesRequired;\r\n      });\r\n\r\n      room.onMessage('game-view-changed', (newGameView: GameView) => {\r\n        switch (newGameView) {\r\n          case GameView.Swapping:\r\n            // reset\r\n            this.selectedCommonIndex = -1;\r\n            this.selectedHandIndex = -1;\r\n\r\n            // start the round timer\r\n            this.roundTimeRemainingMS = GameConstants.roundTimeMS;\r\n\r\n            this.roundTimeInterval = setInterval(() => {\r\n              this.roundTimeRemainingMS -= this.roundTimeDeltaMS;\r\n            }, this.roundTimeDeltaMS);\r\n            break;\r\n          case GameView.Showdown:\r\n            // reset\r\n            this.isNextRoundClicked = false;\r\n\r\n            clearInterval(this.roundTimeInterval);\r\n            break;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public selectCommonCard(index: number): void {\r\n    if (this.selectedCommonIndex === index) {\r\n      this.selectedCommonIndex = -1;\r\n    }\r\n    else {\r\n      this.selectedCommonIndex = index;\r\n      this.swapIfBothSelected();\r\n    }\r\n  }\r\n\r\n  public selectHandCard(index: number): void {\r\n    if (this.selectedHandIndex === index) {\r\n      this.selectedHandIndex = -1;\r\n    }\r\n    else {\r\n      this.selectedHandIndex = index;\r\n      this.swapIfBothSelected();\r\n    }\r\n  }\r\n\r\n  private swapIfBothSelected(): void {\r\n    if (this.selectedCommonIndex !== -1 && this.selectedHandIndex !== -1) {\r\n      this.colyseus.swapCards(this.selectedCommonIndex, this.selectedHandIndex);\r\n\r\n      this.selectedCommonIndex = -1;\r\n      this.selectedHandIndex = -1;\r\n    }\r\n  }\r\n\r\n  public onNextRoundClicked(): void {\r\n    this.isNextRoundClicked = true;\r\n    this.colyseus.room.send('next-round-vote');\r\n  }\r\n\r\n  public cardToImagePath(card: Card): string {\r\n    const suit = {\r\n      0: 'Clubs',\r\n      1: 'Diamonds',\r\n      2: 'Hearts',\r\n      3: 'Spades'\r\n    }[card.suit];\r\n\r\n    let num: string;\r\n    switch (card.num) {\r\n      case 1:\r\n        num = 'A';\r\n        break;\r\n      case 11:\r\n        num = 'J';\r\n        break;\r\n      case 12:\r\n        num = 'Q';\r\n        break;\r\n      case 13:\r\n        num = 'K';\r\n        break;\r\n      default:\r\n        num = card.num.toString();\r\n    }\r\n\r\n    return `assets/card${suit}${num}.png`;\r\n  }\r\n}\r\n","<div class=\"container mt-3\">\r\n    <div [ngSwitch]=\"gameView\">\r\n        <div *ngSwitchCase=\"GameView.Swapping\">\r\n            <h3 class=\"text-center\">Make the best hand you can!</h3>\r\n            <div\r\n                class=\"progress round-timer\"\r\n                >\r\n                <div\r\n                    class=\"progress-bar progress-bar-striped\"\r\n                    [ngClass]=\"roundTimeRemainingMS > (GameConstants.roundTimeMS / 5) ? 'bg-info' : 'bg-danger'\"\r\n                    role=\"progressbar\"\r\n                    [style.width]=\"(roundTimeRemainingMS / GameConstants.roundTimeMS * 100) + '%'\">\r\n                </div>\r\n            </div>\r\n            <div class=\"card-row\">\r\n                <h3>Common Cards:</h3>\r\n                <img\r\n                    [src]='cardToImagePath(card)'\r\n                    width=\"100\"\r\n                    class=\"card\"\r\n                    [class.selected-card]=\"selectedCommonIndex === i\"\r\n                    *ngFor=\"let card of commonCards; let i = index\"\r\n                    (click)=\"selectCommonCard(i)\"\r\n                >\r\n            </div>\r\n            <div class=\"card-row\">\r\n                <h3>Your Hand:</h3>\r\n                <img\r\n                    [src]='cardToImagePath(card)'\r\n                    width=\"100\"\r\n                    class=\"card\"\r\n                    [class.selected-card]=\"selectedHandIndex === i\"\r\n                    *ngFor=\"let card of handCards; let i = index\"\r\n                    (click)=\"selectHandCard(i)\"\r\n                >\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngSwitchCase=\"GameView.Showdown\">\r\n            <div class=\"text-center\">\r\n                <h3>Showdown!</h3>\r\n\r\n                <div class=\"row justify-content-center\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th class=\"fit\" scope=\"col\">Name</th>\r\n                                <th class=\"fit\" scope=\"col\">Hand</th>\r\n                                <th class=\"fit\" scope=\"col\">Hand ranking</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let result of showdownResults\">\r\n                                <th class=\"fit\" scope=\"row\">{{ result.playerName }}</th>\r\n                                <td class=\"fit\" >{{ result.hand }}</td>\r\n                                <td class=\"fit\" >{{ result.rank }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <h3>{{ showdownWinner.name }} wins!</h3>\r\n\r\n                <div class=\"fixed-bottom\">\r\n                    <button\r\n                        class=\"btn btn-primary mb-3\"\r\n                        type=\"button\"\r\n                        [disabled]=\"isNextRoundClicked\"\r\n                        (click)=\"onNextRoundClicked()\"\r\n                    >\r\n                        {{ isNextRoundClicked ? 'Waiting for others...' : 'Next Round' }} [{{ numVotedNextRound }} / {{ nextRoundVotesRequired }}]\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n  <a class=\"navbar-brand\">Riffle</a>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\"\r\n          >Home <span class=\"sr-only\">(current)</span></a\r\n        >\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GameComponent } from './game/game.component';\r\nimport { LobbyComponent } from './lobby/lobby.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'lobby', component: LobbyComponent },\r\n  { path: 'game/:id', component: GameComponent },\r\n  { path: '**', redirectTo: 'lobby' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}